I came up with a pretty efficient solution. I have an array that i initialize with 2 and 3. Then i start 
from counter 4 and see if 4 can be divided to 2 or 3. Which leaves 2. Then i add that 2 to the end of the 
array. And i keep doing this.

Java

public class Smallest_multiple
{
	public static void main(String[] args)
	{
		byte[] array1 = new byte[20];
		array1[0] = 2;
		array1[1] = 3;

		int smallestMultiple = 1;
		byte tempCounter;

		for (byte counter = 4; counter <= 20; counter++)
		{
			tempCounter = counter;

			byte counter2 = 0;
			while (array1[counter2] != 0)
			{
				if (tempCounter % array1[counter2] == 0)
				{
					tempCounter /= array1[counter2];
				}
				counter2++;
			}
			array1[counter2] = tempCounter;
		}

		byte counter2 = 0;
		while (array1[counter2] != 0)
		{
			smallestMultiple *= array1[counter2];
			counter2++;
		}
		System.out.println(smallestMultiple);
	}
}